Технологический стек: MEAN (Mongo, Express, Angular, Nodejs)
Для API: GraphQL, можно добавить дополнительное мини-API restFULL
Дополнения по тех. стеку: MaterialUI, SASS, Web Sockets, локализация

Задача: переписать предыдущий проект с PR целей с Django+Vuejs на указанный выше стек.
Фичи старого проекта:
Блог: посты, комменты, авторы, регистрация, привилегии
Админка (на джанго)
Фичи нового проекта:
тот же блог
по админке: продумать, что из этого нужно, реализовать (или поискать аналоги джанго-админки под MEAN стек)
дополнительно:
какой-то чат или любой другой интерактив, чтобы использовать Web Sockets
авторизация через соц сетки
аплоад фото-видео и сохранение на сервере
интерфейс должен быть доступен и с десктопа, и с мобильного устройства


Изучить технологический стек MEAN (Mongo, Express, Angular, Nodejs) и написать проект на этом стеке.

Для API: добавить в проект GraphQL, можно добавить дополнительное мини-API restFULL.
Дополнения по тех. стеку: MaterialUI, SASS, Web Sockets, локализация.

Задача: переписать предыдущий проект с PR целей с Django+Vuejs на указанный выше стек.

Реализовать фичи старого проекта:
1. Блог: посты, комменты, авторы, регистрация, привилегии
2. Поискать аналоги джанго-админки под MEAN стек или продумать, что из админки нужно и реализовать 

Добавить новые фичи на проект:
1. Чат или любой другой интерактив, чтобы использовать Web Sockets
2. Авторизация через социальные сети
3. Загрузка файлов и сохранение на сервере
4. Интерфейс должен быть доступен и с десктопа, и с мобильного устройства

// Node js
https://nodejs.org/en/ 

// TODO read after initail node js introduction
https://habr.com/ru/post/424199/
https://github.com/graphql/express-graphql


// ORM for the backend
https://sequelize.org/master/manual/getting-started 

+ try to read some Metanit lectures at the beginning


// swagger for the backend 
https://www.npmjs.com/package/swagger-ui-express

// express with es6 
https://medium.com/javascript-in-plain-english/using-es6-for-your-backend-nodejs-application-running-on-express-using-babel-5503bded9842
https://www.freecodecamp.org/news/how-to-enable-es6-and-beyond-syntax-with-node-and-express-68d3e11fe1ab/

// boilerplate
https://github.com/imJPFeliciano/node-express-es6-airbnb

// Airbnb's Javascript (ES6) Style Guide
https://github.com/airbnb/javascript

// graphql 
https://medium.com/@xoor/coding-a-graphql-api-with-node-js-c02d617f49f4

// Mongo in container
https://devops.ionos.com/tutorials/creating-a-mongodb-docker-container-with-an-attached-storage-volume/
https://medium.com/faun/managing-mongodb-on-docker-with-docker-compose-26bf8a0bbae3

// Mongo
https://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu/ 

// Mongo container
https://zgadzaj.com/development/docker/docker-compose/containers/mongodb

// AdminBro
https://adminbro.com/docs.html
https://adminbro.com/module-admin-bro-expressjs.html

// Admin Mongo
https://docs.mongodb.com/manual/introduction/
https://github.com/mrvautin/adminMongo

// TODO: write a normal readme and documentation, cleanup code before started

// Describing body of the request (Open api doxumentation)
https://swagger.io/docs/specification/describing-request-body/
https://swagger.io/docs/specification/2-0/describing-parameters/

// Node js youtube
https://www.youtube.com/watch?v=UVAMha41dwo&list=PL55RiY5tL51q4D-B63KBnygU6opNPFk_q&index=4
